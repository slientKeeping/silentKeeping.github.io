<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>KVM on FeixiangFu</title><link>https://fufeixiang.com/tags/kvm/</link><description>Recent content in KVM on FeixiangFu</description><generator>Hugo -- gohugo.io</generator><language>zh-ch</language><copyright>© 2025 FeixiangFu</copyright><lastBuildDate>Sat, 11 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://fufeixiang.com/tags/kvm/index.xml" rel="self" type="application/rss+xml"/><item><title>VMware虚拟机迁移KVM部署</title><link>https://fufeixiang.com/2024/05/vmwaretokvm/</link><pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate><guid>https://fufeixiang.com/2024/05/vmwaretokvm/</guid><description>部分服务器是由VMware虚拟化平台创建，平台版本低维护困难，需要迁移至libvirt管理的KVM环境。由于服务器部署的服务年代久远，重新部署有困难，需使用virt-v2v工具一键迁移
VMware虚拟机列表 # libvirt服务器作为客户端可以查看VMware ESXi hypervisor虚拟机列表
[root@kvmpool-1] ~$ virsh -c &amp;#39;esx://root@192.168.81.12/?no_verify=1&amp;#39; list --all Enter root&amp;#39;s password for 192.168.81.12: Id Name State ------------------------------------------------------- 80 test-win7 running 基于SSH协议传输模式 # SSH传输模式的限制：VMware快照会生成一系列增量VMDK文件（如 guest-000001.vmdk），形成父子磁盘链。使用 -it ssh 选项时，工具仅能通过 SSH 读取 guest.</description></item><item><title>kvm部署WindowsServer2019</title><link>https://fufeixiang.com/2022/08/kvm-windowsserver2019/</link><pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate><guid>https://fufeixiang.com/2022/08/kvm-windowsserver2019/</guid><description>资料准备 # iso文件下载 # 可以通过访问官方页面下载( 链接)，但是下载速度比较慢。 我这里选择使用p2p下载工具mldonkey，Centos7系统安装可以参考 Centos7部署mldonkey，iso文件e2dk下载链接可以从 msdn.itellyou.cn网站获取
ed2k://|file|cn_windows_server_2019_updated_march_2019_x64_dvd_c1ffb46c.iso|5347280896|49FCF8C558517608537E0396854560D6|/ virtio驱动程序下载 # kvm安装运行windows server系统需要安装磁盘scsi、网卡驱动
yum安装 wget https://fedorapeople.org/groups/virt/virtio-win/virtio-win.repo -O /etc/yum.repos.d/virtio-win.repo yum install -y virtio-win 手动下载驱动文件 virtio-win-0.1.173_x86.vfd 或者 virtio-win-0.1.173.iso 下载链接 基础镜像制作 # 创建kvm镜像文件 # [root@kvm-1 ~]# qemu-img create -f qcow2 win2019-dc.</description></item><item><title>qemu-kvm虚拟机配置NVMe直通</title><link>https://fufeixiang.com/2020/08/qemu-pci-passthrough-nvme/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://fufeixiang.com/2020/08/qemu-pci-passthrough-nvme/</guid><description>概述 # PCI设备直通(PCI Passthrough)是指将物理PCI设备像网卡、存储卡等直接分配给虚拟机，而不是通过模拟或仿真的方式。优点是性能提升显著,完全消除了虚拟化开销，可充分发挥物理设备的硬件能力，如GPU直接执行计算任务。
虚拟机配置设备直通依赖CPU VT-d虚拟化技术。
VT-d是Intel的I/O虚拟化技术。它允许虚拟机直接与硬件设备通信，而无需宿主机操作系统的介入，从而提高性能并减少对CPU的依赖。VT-d技术包括集成的I/O内存管理单元（IOMMU），支持DMA重映射和中断重映射。 Intel VT-d 的关键特性包括：
设备直通：允许虚拟机直接访问和控制物理硬件设备，无需经过宿主机的操作系统或内核驱动程序，这样可以减少性能开销。 IOMMU 支持：VT-d 包括一个集成的 I/O 内存管理单元（IOMMU），它负责将设备的 I/O 地址空间映射到虚拟机的地址空间，同时保证内存访问的安全性和隔离性。 中断重映射：VT-d 支持将设备的硬件中断重映射到虚拟机，使得虚拟机可以像使用本地中断一样响应硬件事件。 DMA 重映射：VT-d 允许将设备的直接内存访问（DMA）操作重映射到虚拟机的地址空间，这样虚拟机就可以直接与设备进行数据交换。 安全性：通过隔离每个虚拟机的 I/O 操作，VT-d 提高了系统的安全性，确保虚拟机之间的操作不会相互干扰。 兼容性：VT-d 支持广泛的硬件设备，包括但不限于网络卡、存储控制器和图形处理器。 性能：通过减少虚拟机与硬件设备通信的延迟，VT-d 有助于提高虚拟化环境的整体性能。 灵活性：VT-d 允许虚拟机使用与物理机相同的设备驱动程序，从而简化了虚拟机的驱动程序开发和维护。 IOMMU（Input/Output Memory Management Unit，输入/输出内存管理单元）是一种计算机硬件组件，它在计算机的操作系统和硬件设备之间提供一种抽象层，用于管理设备的内存访问。IOMMU的主要功能是将设备的I/O地址空间映射到系统的物理内存地址空间，从而允许多个设备安全地访问内存，而不会相互冲突或破坏系统的内存完整性。IOMMU是保证虚拟机直接访问硬件设备，同时保持隔离和安全性的关键组件。</description></item><item><title>使用QEMU虚拟NVMe设备</title><link>https://fufeixiang.com/2020/08/qemu-nvme/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate><guid>https://fufeixiang.com/2020/08/qemu-nvme/</guid><description>本文主要介绍在没有NVMe磁盘的测试机器时，如何通过QEMU启动一个虚拟机并虚拟出NVMe磁盘
测试机使用的系统是CentOS7.7。yum源安装的qemu-kvm是不支持虚拟nvme设备的，因为编译时./configure 指定了参数&amp;ndash;without-default-devices
[root@localhost ~]# /usr/libexec/qemu-kvm -device help |&amp;amp; grep nvme 编译qemu-5.2.0 # [root@localhost] /data$ wget https://download.qemu.org/qemu-5.2.0.tar.xz [root@localhost] /data$ tar xf qemu-5.2.0.tar.xz [root@localhost] /data$ yum install gcc gcc-c++ python3 meson glib2-devel pixman-devel zlib-devel bzip2 bzip2-devel libuuid-devel spice-protocol spice-server-devel usbredir-devel libaio-devel libcurl-devel -y -q [root@localhost] /data$ cd qemu-5.</description></item><item><title>kvm虚拟机磁盘扩容</title><link>https://fufeixiang.com/2020/05/kvm-disk-expand/</link><pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate><guid>https://fufeixiang.com/2020/05/kvm-disk-expand/</guid><description>虚拟机基础镜像制作完成后，磁盘容量及固定了，如果遇到需要扩容磁盘容量的情况，我们如何基于当前镜像快速扩容满足需求呢？本文主要介绍如何使用qemu-img resize和virt-resise工具对虚拟机镜像分区扩容，以及两者的区别。
qemu-img resize # 本文示例中CentOS7虚拟机镜像的系统分区为dos标准分区，基础镜像磁盘大小为50G
[root@kvm-1 sty_vm1]# qemu-img info img-centos7.qcow2 image: img-centos7.qcow2 file format: qcow2 virtual size: 50G (53687091200 bytes) disk size: 2.1G cluster_size: 65536 Format specific information: compat: 1.</description></item></channel></rss>